[{"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\index.js":"1","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\reportWebVitals.js":"2","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\App.js":"3","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\index.js":"4","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\DirectoryBar.js":"5","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectBar.js":"6","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\Directory.js":"7","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\url.js":"8","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\Element.js":"9","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\SubDirectory.js":"10","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Store.js":"11","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Context.js":"12","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\serverEndpoint.js":"13","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Signup.js":"14","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Register.js":"15","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Login.js":"16"},{"size":780,"mtime":1610535546712,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1610276616987,"results":"19","hashOfConfig":"18"},{"size":1429,"mtime":1613387244586,"results":"20","hashOfConfig":"18"},{"size":6531,"mtime":1613370928934,"results":"21","hashOfConfig":"18"},{"size":4224,"mtime":1613364384616,"results":"22","hashOfConfig":"18"},{"size":3879,"mtime":1613387193823,"results":"23","hashOfConfig":"18"},{"size":3823,"mtime":1613231396534,"results":"24","hashOfConfig":"18"},{"size":1001,"mtime":1610451069728,"results":"25","hashOfConfig":"18"},{"size":2061,"mtime":1613225043006,"results":"26","hashOfConfig":"18"},{"size":2571,"mtime":1613366521052,"results":"27","hashOfConfig":"18"},{"size":171,"mtime":1610357452353,"results":"28","hashOfConfig":"18"},{"size":474,"mtime":1610371427634,"results":"29","hashOfConfig":"18"},{"size":119,"mtime":1613387971730,"results":"30","hashOfConfig":"18"},{"size":2874,"mtime":1613385008616,"results":"31","hashOfConfig":"18"},{"size":1236,"mtime":1613383958447,"results":"32","hashOfConfig":"18"},{"size":2595,"mtime":1613385195936,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1u3itse",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\index.js",["77","78"],"import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route} from 'react-router';\r\nimport { BrowserRouter,Redirect } from 'react-router-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    {/* <Redirect to={`/project_id=1&directory=1&subdirectory=1`} /> */}\r\n      <Route path='/' component={App}></Route> \r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["79","80"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\reportWebVitals.js",[],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\App.js",["81","82","83"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\index.js",["84","85","86"],"import React, { createElement } from 'react';\r\nimport { render } from 'react-dom';\r\nimport MonacoEditor from 'react-monaco-editor';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport './index.css';\r\n// import io from 'socket.io-client'   \r\nimport {ENDPOINT} from '../serverEndpoint';\r\n\r\n\r\n    \r\n// var socket = io(url, {transports: ['websocket', 'polling', 'flashsocket']});\r\nconst socket = socketIOClient(ENDPOINT);\r\n\r\n\r\n\r\n\r\n// compilercode stores the current code in compiler\r\nvar compilerCode=\"\"\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: '',\r\n      id:''\r\n    }\r\n   this.updateCode=this.updateCode.bind(this)\r\n   this.updateCursor=this.updateCursor.bind(this)\r\n   this.sendCode=this.sendCode.bind(this)\r\n   this.updateId=this.updateId.bind(this)\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  //  function gets triggered when subdirectory changes\r\n  //  function starts listening to the socket\r\n  startSocket=()=>{\r\n    this.listenSocket();\r\n  }\r\n\r\n  //  function gets triggered when subdirectory changes\r\n  //  function stops listening to the socket\r\n  turnOffSocket=()=>{\r\n    console.log(\"turning off socket\")\r\n    socket.disconnect() \r\n    socket.off(); // stops listening to all events\r\n  }\r\n\r\n\r\n  // when the compiler code is changed the function is trigerred \r\n  // sends the compiler code to the server\r\n  sendCode=(code)=>{\r\n    let data={\r\n      \"room\":this.props.data.id,\r\n      \"directory\":this.props.data.directory_id,\r\n      \"code\":code\r\n    }\r\n    \r\n    socket.emit(\"code\", data);\r\n\r\n  }\r\n\r\n\r\n\r\n  // function gets emitted when the current user clicks the screen\r\n  // socket is emmited with the current user's location\r\n  \r\n  //gets coordinates of the current user cursor\r\n\r\n  //sends the cursor coordinates to socket.io server\r\n  sendCoords=(event)=>{\r\n\r\n    let data={\r\n      \"user_name\":\"user1\",\r\n      \"room\":this.state.id,\r\n      \"x\":event.clientX,\r\n      \"y\":event.clientY\r\n    }\r\n    socket.emit(\"coordinates\", data);\r\n    \r\n  }\r\n\r\n  \r\n  //listens for socket.io on current active id\r\n  listenSocket=()=>{\r\n    \r\n    socket.connect();\r\n\r\n    // {room : id of the current active subdirectory}\r\n    let channel={\"room\":this.props.data.id}\r\n    \r\n    // join the current active room\r\n    socket.emit(\"join_room\",channel);\r\n\r\n    //calling update cursor function when gets coordinates from server\r\n    socket.on('coordinates',data=>{\r\n      this.updateCursor(data)\r\n    })\r\n\r\n    //calling update code function when gets code from server\r\n    socket.on('code',data=>{\r\n      this.updateCode(data.code)\r\n    });\r\n\r\n  }\r\n\r\n  // function gets trigerred when socket emits cursor change emit\r\n  //function to position duplicate cursor (user2) on user screen\r\n  updateCursor=(data)=>{\r\n    let x=data.x\r\n    let y=data.y\r\n\r\n    y=y-10;\r\n\r\n    const cursor = document.getElementById('cursor');\r\n    cursor.style.left = x+'px';\r\n    cursor.style.top = y+'px';\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //Monaco functions \r\n\r\n\r\n  // do not modify\r\n  editorDidMount(editor, monaco) {\r\n    // console.log('editorDidMount', editor);\r\n    editor.focus();\r\n  }\r\n  \r\n  //updates the compiler code\r\n  updateCode=(code)=>{\r\n    this.setState({\r\n      code:code\r\n    });\r\n  }\r\n\r\n  // function gets trigerred when code changes in the compiler\r\n  // do not modify\r\n  onChange=(newValue, e)=>{\r\n    compilerCode=newValue;\r\n    // console.log(newValue)\r\n    this.sendCode(compilerCode);\r\n    // console.log('onChange', newValue, e);\r\n  }\r\n\r\n  //returns the code written in compiler in JSON string format\r\n  getData(){\r\n    let output=compilerCode\r\n    return output;\r\n  }\r\n\r\n  //switches between the compiler window and messaging app\r\n  changeWindow=(editor)=>{\r\n\r\n    let element_editor=this.refs.Editor;\r\n    let element_message=this.refs.Message;\r\n    \r\n    if(editor){\r\n      //change to editor\r\n      element_editor.classList.add(\"active\");\r\n      element_message.classList.remove(\"active\")\r\n    }\r\n    else{\r\n      //change to message\r\n      element_message.classList.add(\"active\");\r\n      element_editor.classList.remove(\"active\")\r\n    }\r\n    \r\n  }\r\n\r\n  //  fetches the code from server of the current active subdirectory\r\n  //  function gets executed when the new subdirectory is loaded\r\n\r\n  fetchCode(id){\r\n    \r\n    //id is the id of the current active subdirectory\r\n    var endpoint = \"https://livecodebackend.herokuapp.com/findcodebyid/\"+id;\r\n    \r\n    fetch(endpoint)\r\n    \r\n    .then(data=>data.json()\r\n    .then(data=>{\r\n      // update the code of the new code fetched from the server\r\n      this.updateCode(data.code);\r\n    })\r\n    )\r\n    .catch(err=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //lifecycle funtions\r\n\r\n  // updates the id of the current active subdirectory\r\n  updateId=(newid)=>{\r\n\r\n    this.setState({\r\n      \"id\":newid\r\n    })\r\n\r\n  }\r\n\r\n\r\n// when the props from parent changes\r\n// new props are set as states\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {id: props.data.id };\r\n  }\r\n\r\n  // when current subdirectory changes the function gets triggered\r\n  componentDidUpdate(prevProps,prevState) {\r\n    \r\n    // if the props are changed\r\n    if(this.state.id != prevState.id){\r\n       // turn off all previous socket connections \r\n      this.turnOffSocket();\r\n    \r\n    // start listening on the current subdirectory\r\n    this.startSocket();\r\n\r\n    // fetch code of the current active subdirectory\r\n    this.fetchCode(this.state.id);    \r\n    \r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  render() {\r\n    const code = this.state.code;\r\n    const options = {\r\n      selectOnLineNumbers: true\r\n    };\r\n\r\n    return (\r\n      <div className=\"Editor-Parent\">\r\n      <div className=\"Editor-Category\">\r\n        <input type=\"button\" className=\"btn active\" ref=\"Editor\" onClick={()=>this.changeWindow(true)} value=\"Editor\"/>\r\n        <input type=\"button\" className=\"btn\" ref=\"Message\" onClick={()=>this.changeWindow(false)} value=\"Messages\"/>\r\n        {/* <input type=\"button\" className=\"btn\" ref=\"Data\" onClick={()=>this.sendCode()}  value=\"get Data\"/> */}\r\n      </div>\r\n      <div className=\"Editor\" onClick={this.sendCoords.bind(this)}>\r\n        <h3 id=\"cursor\">cursor</h3>\r\n      <MonacoEditor\r\n        width=\"80vw\"\r\n        height=\"90vh\"\r\n        language=\"javascript\"\r\n        theme=\"vs-dark\"\r\n        value={code}\r\n        options={options}\r\n        onChange={this.onChange}\r\n        editorDidMount={this.editorDidMount}\r\n      />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\DirectoryBar.js",["87","88"],"\r\nimport { Component } from 'react';\r\nimport Directory from './Directory'\r\nimport './DirectoryBar.css';\r\nimport Monaco from '../Monaco/index';\r\n\r\n\r\n// Parent Component is ProjectBar\r\n      // props received are -> directories : json object that holds details of all the directories of CURRENT project\r\n\r\n// Child Components :\r\n      \r\n      // Directory \r\n          // props passed:\r\n              // id => id of the current directory\r\n              // name => name of the current directory\r\n              // subdirectories => data of all the directories\r\n              // data => directory + subdirectory data\r\n              // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon \r\n              //                        this function is passed to => directory => subdirectory.js (here click event is trigerred)\r\n              \r\n      // Monaco Editor\r\n        // props passed:\r\n            // data => subdirectories data -> has the data of all the directories and project id\r\n\r\nclass DirectoryBar extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          user:\"user\",\r\n          directories:\"\",\r\n          arr:\"\",\r\n          subdirectory_data:\"\",\r\n          prevSubdirectory:\"\"\r\n        }\r\n      }\r\n      \r\n      //gets triggered on project change\r\n      componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props != prevProps){\r\n          // console.log(\"directorybar compupate\",this.props)\r\n        var directories = this.props.directories ;\r\n        let count=directories.length\r\n          \r\n                var arr=[] \r\n\r\n                for(let i = 0 ; i < count ; i++ ){\r\n                  \r\n                  let element=<Directory id={directories[i]._id} name={directories[i].name} subdirectories={directories[i].subdirectories}  data={directories[i]} changeSubdirectory={this.changeSubdirectory}/>\r\n                  arr.push(element)\r\n                }\r\n              \r\n                  this.setState({\r\n                  // \"user\":user,\r\n                  \"directories\":directories,\r\n                  \"data\":arr,\r\n                })}\r\n      }\r\n\r\n      //function gets triggerred when the user changes(clicks) subdirectory\r\n      //adds the active-subdirectory class to subdirectory object\r\n      activateSubdirectory=(newId)=>{\r\n        //newId is the id of the element that is clicked\r\n\r\n        var activeObject = document.getElementById(newId);\r\n        \r\n        if(activeObject!=undefined && activeObject!=null){\r\n          activeObject.classList.add(\"active-subdirectory\");\r\n        }\r\n      \r\n      }\r\n      \r\n      //function gets triggerred when the user changes(clicks) subdirectory\r\n      //removes the active-subdirectory class from all the subdirectory object\r\n      deactivatePreviousSubdirectory=()=>{\r\n        \r\n          var inactiveObject = document.getElementsByClassName(\"SubDirectory\");\r\n        \r\n          for(let itr = 0 ; itr < inactiveObject.length ; itr ++){\r\n            inactiveObject[itr].classList.remove(\"active-subdirectory\");\r\n          }\r\n\r\n      }\r\n\r\n      //changes sub directory \r\n      // trigerred when user changes(clicks) subdirectory\r\n      // passed from director-bar to directory to subdirectory\r\n      changeSubdirectory=(data)=>{\r\n\r\n        //data holds the details of the subdirectory being clicked\r\n        console.log(data)\r\n        this.deactivatePreviousSubdirectory();\r\n\r\n        this.activateSubdirectory(data.id);\r\n        \r\n        this.setState({\r\n          \"subdirectory_data\":data\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    \r\n    render(){\r\n      return (\r\n        \r\n        <div className=\"DirectoryBar-parent\">\r\n          <div className=\"Directory\">\r\n            <div className=\"DirectoryBar-User\">\r\n\r\n                  {this.state.user.name}\r\n\r\n            </div>      \r\n\r\n            <div className=\"DirectoryBar-List\">\r\n\r\n                  {this.state.data}\r\n\r\n            </div>      \r\n          </div> \r\n\r\n          <div className=\"Monaco-Wrapper\">\r\n\r\n              <Monaco data={this.state.subdirectory_data}/>\r\n              \r\n          </div>\r\n\r\n        </div>\r\n        \r\n  \r\n      )\r\n    }\r\n  }\r\n  \r\n  export default DirectoryBar;\r\n  ","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectBar.js",["89","90"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\Directory.js",["91","92","93","94"],"import { Component } from 'react';\r\n// import Directory from './Directory'\r\nimport './Directory.css';\r\nimport Monaco from '../Monaco/index'\r\nimport url, { modifyUrl } from '../url'\r\nimport SubDirectory from './SubDirectory'\r\n\r\n\r\n// Parent Component is DirectoryBar\r\n      // props received are -> directories : json object that holds details of all the directories of CURRENT project\r\n            // id => id of the current directory\r\n            // name => name of the current directory\r\n            // subdirectories => data of all the directories\r\n            // data => directory + subdirectory data\r\n            // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon \r\n            //                        this function is received from directorybar and is passed to subdirectory.js\r\n            //                        (from) Directorybar => directory => subdirectory.js (pass it down as props)\r\n\r\n// Child Components :\r\n      \r\n      // SubDirectory \r\n          // props passed:\r\n            // subdirectory_id => id of i-th subdirectory of current directory\r\n            // directory_id => id of the current directory\r\n            // data => json object - details of the sub-directories \r\n            // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon\r\n            //                        this function is received from directorybar and is passed to subdirectory.js\r\n            //                        (from) Directorybar => directory => subdirectory.js (pass it down as props)\r\n            \r\nclass Directory extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          name:\"directory\",\r\n          id:\"\",\r\n          data:\"\",\r\n          subdirectories:\"\"\r\n        }\r\n      }\r\n   \r\n      // when props from the parent component changes the following function gets trigerred\r\n      // when new project is clicked => the active project changes => the props passed down also gets changed => function gets trigerred\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props!=prevProps){\r\n            var subdirectories=this.props.subdirectories\r\n            var count = subdirectories.length\r\n        \r\n            var arr=[]\r\n\r\n        for(var i = 0 ; i < count ; i++){\r\n            var subdirectory = <SubDirectory subdirectory_id={subdirectories[i]._id} directory_id={this.props.id} data = {subdirectories[i]} changeSubdirectory={this.props.changeSubdirectory} />\r\n            arr.push(subdirectory)\r\n        }\r\n\r\n         this.setState({\r\n             \"name\":this.props.name,\r\n             \"id\":this.props.id,\r\n             \"data\":this.props.data,\r\n             \"subdirectories\":arr\r\n         })\r\n        }\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        \r\n        var subdirectories=this.props.subdirectories\r\n        var count = subdirectories.length\r\n        \r\n        var arr=[]\r\n        for(var i = 0 ; i < count ; i++){\r\n            var subdirectory = <SubDirectory subdirectory_id={subdirectories[i]._id} directory_id={this.props.id} data = {subdirectories[i]} changeSubdirectory={this.props.changeSubdirectory} />\r\n            arr.push(subdirectory)\r\n        }\r\n\r\n         this.setState({\r\n             \"name\":this.props.name,\r\n             \"id\":this.props.id,\r\n             \"data\":this.props.data,\r\n             \"subdirectories\":arr\r\n         })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Directory-Parent\" onClick={this.goto}>\r\n                <div id={this.props.directory_id} className=\"Directory\">\r\n                    <h4>#{this.state.name}</h4>\r\n                </div>\r\n               \r\n                {this.state.subdirectories}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Directory;","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\url.js",["95"],"\r\nexport function modifyUrl(data){\r\n    //get base url\r\n    var base_url=window.location.origin\r\n    \r\n    //get complete url\r\n    var url = window.location.search\r\n\r\n    //get url parameters\r\n    const urlParams = new URLSearchParams(url);\r\n    \r\n    //change url parameters\r\n    if(data.project_id){\r\n        urlParams.set(\"project_id\",data.project_id)\r\n    }\r\n    if(data.directory){\r\n        urlParams.set(\"directory\",data.directory)\r\n    }\r\n    if(data.subdirectory){\r\n        urlParams.set(\"subdirectory\",data.subdirectory)\r\n    }\r\n    var para=urlParams.toString();\r\n    //return the new url\r\n    var newUrl=base_url+'/?'+urlParams.toString()\r\n    return newUrl\r\n}\r\n\r\nexport function getParam(){\r\n    var url = window.location.search\r\n\r\n    const urlParams = new URLSearchParams(url)\r\n    \r\n    var body = {\r\n        \"project_id\":urlParams.get(\"project_id\"),\r\n        \"directory\":urlParams.get(\"directory\"),\r\n        \"subdirectory\":urlParams.get(\"subdirectory\")\r\n    }\r\n    \r\n    return body\r\n}","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\Element.js",["96","97","98","99","100"],"\r\nimport { Component } from 'react';\r\n\r\nimport './Element.css';\r\nimport ProjectBar from './ProjectBar.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { modifyUrl } from '../url';\r\n\r\n// Parent Component is ProjectBar\r\n\r\n\r\n// props received are :\r\n            // index -> index of the current project in the array\r\n            // id -> the project id \r\n            // name -> the peoject name\r\n            // directories -> the directories present in the current project\r\n            // function activeProject -> this function is responsible for changing the current active project\r\nclass Element extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n      this.state={\r\n        'name':'name',\r\n        \"id\":'',\r\n        'data':''\r\n      }\r\n      // this.goto=goto.bind(this)\r\n    }\r\n    truncate=(str)=>{\r\n      if(str==undefined){\r\n        return;\r\n      }\r\n      let word= str.toUpperCase();\r\n      word=word[0];\r\n      return word\r\n    }\r\n\r\n    //adds project id into the url\r\n    goto=(e)=>{\r\n      console.log(\"clicked on project\",this.state.id)\r\n      this.props.activeProject(this.state.key)\r\n        \r\n      // var data={\r\n      //   \"project_id\":this.state.id\r\n      // }\r\n\r\n      // this.props.history.push('/foo');\r\n\r\n\r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n      //get base url of current website\r\n      var base_url=window.location.origin;\r\n      // console.log(this.props.id)\r\n      // console.log(this.props.name)\r\n      // console.log(this.props.data)\r\n      //update the state\r\n      this.setState({\r\n        key:this.props.index,\r\n        id:this.props.id,\r\n        name:this.props.name,\r\n        data:this.props.data\r\n      })\r\n    }\r\n  render(){\r\n    return (\r\n      <div className=\"Element-parent\" id={this.state.id} onClick={this.goto} >\r\n        <div className=\"Element\">\r\n          <div className=\"Element-image-circle\" >\r\n            <h3 className=\"Element-image\" >{this.truncate(this.state.name)}</h3>\r\n          </div>\r\n        </div>      \r\n        \r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Element;\r\n","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\SubDirectory.js",["101"],"import  { Component } from 'react';\r\nimport './SubDirectory.css';\r\nimport { ENDPOINT } from '../serverEndpoint';\r\n\r\n\r\n\r\n// => Parent is Directory \r\n//     => props received :\r\n            // subdirectory_id => id of i-th subdirectory of current directory\r\n            // directory_id => id of the current directory\r\n            // data => json object - details of the sub-directories \r\n            // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon\r\n            //                        this function is received from directorybar and is passed to subdirectory.js\r\n            //                        (from) Directorybar => directory => subdirectory.js (pass it down as props)\r\n\r\n\r\nclass SubDirectory extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          name:\"subdirectory\",\r\n          id:\"\",\r\n          data:\"\",\r\n          url_params:\"\",\r\n          directory_id:this.props.directory_id\r\n        }\r\n      }\r\n\r\n    //  handles click when current component is clicked (i.e.,  subdirectory changes )\r\n    //  calls function received from directorybar->directory->subdirectory\r\n    //  when current subdirectory is clicked changesubdirectory function is called\r\n    \r\n    handleClickOnSubDirectory=()=>{\r\n\r\n        var data={\r\n            \"id\":this.props.subdirectory_id,\r\n            \"directory_id\":this.props.directory_id,\r\n            \"code\":this.state.code\r\n        }\r\n        this.props.changeSubdirectory(data)\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if(prevProps!=this.props){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //takes props from directory.js\r\n    //set props in state\r\n    componentDidMount=()=>{\r\n        \r\n        var directory = this.props.data\r\n        var id=this.props.directory_id\r\n        var name = directory.name\r\n\r\n        var fetch_url = ENDPOINT+'/'+id;\r\n\r\n        fetch(fetch_url)\r\n        .then(data=>console.log(data))\r\n        .catch(err=>console.log(err))\r\n        \r\n         this.setState({\r\n             \"name\":name,\r\n             \"id\":id\r\n         })\r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n        return(\r\n\r\n            <div className=\"SubDirectory-Parent\" onClick={this.handleClickOnSubDirectory}>\r\n                <div id={this.props.subdirectory_id} className=\"SubDirectory\">\r\n                    <h4 >-->{this.props.data.name}</h4>        \r\n                </div>                \r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default SubDirectory;","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Store.js",[],["102","103"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Context.js",["104"],"import React,{Component} from 'react';\r\nexport const Context  = React.createContext();\r\n\r\nexport const ContextProvider=(props)=>{\r\n    var object = {\r\n        code:\"user code...\",\r\n\r\n        setCode : function(data){\r\n            this.code=data;\r\n        },\r\n\r\n        getCode : function(){\r\n            return this.code;\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Context.Provider value={object}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\n",["105","106"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\serverEndpoint.js",[],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Signup.js",["107"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Register.js",["108"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Login.js",["109"],{"ruleId":"110","severity":1,"message":"111","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":16},{"ruleId":"110","severity":1,"message":"114","line":6,"column":24,"nodeType":"112","messageId":"113","endLine":6,"endColumn":32},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"110","severity":1,"message":"119","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":52,"column":21,"nodeType":"122","messageId":"123","endLine":52,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":52,"column":43,"nodeType":"122","messageId":"123","endLine":52,"endColumn":45},{"ruleId":"110","severity":1,"message":"124","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":30},{"ruleId":"110","severity":1,"message":"125","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"126","line":247,"column":22,"nodeType":"122","messageId":"123","endLine":247,"endColumn":24},{"ruleId":"120","severity":1,"message":"126","line":42,"column":23,"nodeType":"122","messageId":"123","endLine":42,"endColumn":25},{"ruleId":"120","severity":1,"message":"126","line":69,"column":24,"nodeType":"122","messageId":"123","endLine":69,"endColumn":26},{"ruleId":"110","severity":1,"message":"127","line":77,"column":13,"nodeType":"112","messageId":"113","endLine":77,"endColumn":16},{"ruleId":"110","severity":1,"message":"128","line":96,"column":15,"nodeType":"112","messageId":"113","endLine":96,"endColumn":21},{"ruleId":"110","severity":1,"message":"129","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},{"ruleId":"110","severity":1,"message":"130","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":11},{"ruleId":"110","severity":1,"message":"131","line":5,"column":15,"nodeType":"112","messageId":"113","endLine":5,"endColumn":24},{"ruleId":"120","severity":1,"message":"126","line":46,"column":22,"nodeType":"122","messageId":"123","endLine":46,"endColumn":24},{"ruleId":"110","severity":1,"message":"132","line":22,"column":9,"nodeType":"112","messageId":"113","endLine":22,"endColumn":13},{"ruleId":"110","severity":1,"message":"133","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":18},{"ruleId":"110","severity":1,"message":"134","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":20},{"ruleId":"110","severity":1,"message":"131","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":30,"column":13,"nodeType":"122","messageId":"123","endLine":30,"endColumn":15},{"ruleId":"110","severity":1,"message":"135","line":55,"column":11,"nodeType":"112","messageId":"113","endLine":55,"endColumn":19},{"ruleId":"120","severity":1,"message":"126","line":46,"column":21,"nodeType":"122","messageId":"123","endLine":46,"endColumn":23},{"ruleId":"115","replacedBy":"136"},{"ruleId":"117","replacedBy":"137"},{"ruleId":"110","severity":1,"message":"138","line":1,"column":15,"nodeType":"112","messageId":"113","endLine":1,"endColumn":24},{"ruleId":"115","replacedBy":"139"},{"ruleId":"117","replacedBy":"140"},{"ruleId":"120","severity":1,"message":"121","line":26,"column":23,"nodeType":"122","messageId":"123","endLine":26,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":24,"column":32,"nodeType":"122","messageId":"123","endLine":24,"endColumn":34},{"ruleId":"120","severity":1,"message":"121","line":28,"column":23,"nodeType":"122","messageId":"123","endLine":28,"endColumn":25},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"'ENDPOINT' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createElement' is defined but never used.","'render' is defined but never used.","Expected '!==' and instead saw '!='.","'uid' is assigned a value but never used.","'active' is assigned a value but never used.","'Monaco' is defined but never used.","'url' is defined but never used.","'modifyUrl' is defined but never used.","'para' is assigned a value but never used.","'ProjectBar' is defined but never used.","'useHistory' is defined but never used.","'base_url' is assigned a value but never used.",["141"],["142"],"'Component' is defined but never used.",["141"],["142"],"no-global-assign","no-unsafe-negation"]