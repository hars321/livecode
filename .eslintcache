[{"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\index.js":"1","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\reportWebVitals.js":"2","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\App.js":"3","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\index.js":"4","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\DirectoryBar.js":"5","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectBar.js":"6","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\Directory.js":"7","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\url.js":"8","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\Element.js":"9","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\SubDirectory.js":"10","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Store.js":"11","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Context.js":"12"},{"size":780,"mtime":1610535546712,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1610276616987,"results":"15","hashOfConfig":"14"},{"size":1375,"mtime":1610276616940,"results":"16","hashOfConfig":"14"},{"size":5702,"mtime":1612801963155,"results":"17","hashOfConfig":"14"},{"size":2962,"mtime":1612774674541,"results":"18","hashOfConfig":"14"},{"size":1920,"mtime":1612803662451,"results":"19","hashOfConfig":"14"},{"size":2025,"mtime":1612776320279,"results":"20","hashOfConfig":"14"},{"size":1001,"mtime":1610451069728,"results":"21","hashOfConfig":"14"},{"size":1537,"mtime":1612803885233,"results":"22","hashOfConfig":"14"},{"size":2132,"mtime":1612776439713,"results":"23","hashOfConfig":"14"},{"size":171,"mtime":1610357452353,"results":"24","hashOfConfig":"14"},{"size":474,"mtime":1610371427634,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1u3itse",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"29"},"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\index.js",["62","63"],"import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route} from 'react-router';\r\nimport { BrowserRouter,Redirect } from 'react-router-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    {/* <Redirect to={`/project_id=1&directory=1&subdirectory=1`} /> */}\r\n      <Route path='/' component={App}></Route> \r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["64","65"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\reportWebVitals.js",[],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\App.js",["66","67","68","69","70"],"\r\nimport Monaco from './Monaco/index.js';\r\nimport ProjectBar from './Project/ProjectBar';\r\nimport './App.css';\r\nimport DirectoryBar from './Directory/DirectoryBar.js';\r\nimport React from 'react'\r\n\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      data:\"\",\r\n      projects:\"\",\r\n      directory:\"\",\r\n      user:\"\"\r\n    }\r\n  }\r\n  componentDidMount=()=>{\r\n\r\n    var url = window.location.origin\r\n    var id=1;\r\n    var url_parameter=`?project_id=${id}&directory=${id}&subdirectory=${id}`\r\n\r\n    var new_url = url + url_parameter;\r\n\r\n    \r\n    \r\n    fetch('http://localhost:4000/finduserbyid/5ff19908b3c5741086c9533c')\r\n \r\n    .then(data=>data.json())\r\n    .then(data=>{\r\n      console.log(data)\r\n      if(data.length!=0)\r\n      {\r\n        console.log(data)\r\n        this.setState({\r\n          data:data,\r\n          user:data,\r\n          projects:data.projects,\r\n\r\n        })\r\n      }\r\n      \r\n    })\r\n    .catch(err=>console.log(err))\r\n    \r\n    console.log(this.props.data)\r\n   \r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    if(this.state.data==\"\"){\r\n      return(\r\n        <div className=\"App\">\r\n          Cannot load Data\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"App\" >\r\n        <ProjectBar />\r\n        {/* <DirectoryBar/>\r\n        <Monaco/>\r\n        */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\index.js",["71","72","73","74","75","76","77"],"import React, { createElement } from 'react';\r\nimport { render } from 'react-dom';\r\nimport MonacoEditor from 'react-monaco-editor';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport './index.css';\r\n\r\nimport {Context} from '../Context';\r\nimport { getParam } from '../url';\r\n\r\n\r\n\r\n\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst socket = socketIOClient(ENDPOINT);\r\n    \r\n\r\n\r\n\r\nvar compilerCode=\"\"\r\nvar room=\"room1\"\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: '',\r\n      id:'',\r\n      code:''\r\n    }\r\n   this.updateCode=this.updateCode.bind(this)\r\n   this.updateCursor=this.updateCursor.bind(this)\r\n   this.sendCode=this.sendCode.bind(this)\r\n   this.updateId=this.updateId.bind(this)\r\n   \r\n  }\r\n  updateId=(id)=>{\r\n\r\n    this.setState({\r\n      id\r\n    })\r\n  }\r\n\r\n  startSocket=()=>{\r\n    console.log(\"listening socket\")\r\n    this.listenSocket();\r\n  }\r\n  turnOffSocket=()=>{\r\n    socket.disconnect() \r\n\r\n    socket.off(); // stops listening to all events\r\n  }\r\n\r\n\r\n  static getDerivedStateFromProps(){\r\n    console.log(\"getderivedstate\")\r\n  }\r\n  //changing subdirectory\r\n  componentDidUpdate(prevProps,prevState) {\r\n    \r\n    if (this.props.data.id!=undefined && this.state.id !== prevProps.data.id) {\r\n      console.log(\"calling componentDidUpdate\")\r\n        \r\n        // this.updateId(this.props.data.id);\r\n        // this.fetchCode(this.props.data.id);\r\n\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n  \r\n  // do not modify\r\n  editorDidMount(editor, monaco) {\r\n    // console.log('editorDidMount', editor);\r\n    editor.focus();\r\n  }\r\n\r\n  sendCode=(code)=>{\r\n    console.log(\"monaco\",this.props)\r\n    let data={\r\n      \"room\":this.props.data.id,\r\n      \"directory\":this.props.data.directory_id,\r\n      \"code\":code\r\n    }\r\n    // let data=code\r\n    console.log(data)\r\n    socket.emit(\"code\", data);\r\n\r\n  }\r\n  // do not modify\r\n  onChange=(newValue, e)=>{\r\n    compilerCode=newValue;\r\n    // console.log(newValue)\r\n    this.sendCode(compilerCode);\r\n    // console.log('onChange', newValue, e);\r\n  }\r\n\r\n\r\n \r\n \r\n//returns the code written in compiler in JSON string format\r\n  getData(){\r\n    let output=compilerCode\r\n    return output;\r\n  }\r\n\r\n  //switches between the compiler window and messaging app\r\n  changeWindow=(editor)=>{\r\n\r\n    let element_editor=this.refs.Editor;\r\n    let element_message=this.refs.Message;\r\n    \r\n    if(editor){\r\n      //change to editor\r\n      element_editor.classList.add(\"active\");\r\n      element_message.classList.remove(\"active\")\r\n    }\r\n    else{\r\n      //change to message\r\n      element_message.classList.add(\"active\");\r\n      element_editor.classList.remove(\"active\")\r\n    }\r\n    \r\n  }\r\n\r\n //gets coordinates of the current user cursor\r\n  //sends the cursor coordinates to socket.io server\r\n  sendCoords=(event)=>{\r\n\r\n    let data={\r\n      \"user_name\":\"user1\",\r\n      \"room\":this.state.id,\r\n      \"x\":event.clientX,\r\n      \"y\":event.clientY\r\n    }\r\n    socket.emit(\"coordinates\", data);\r\n    \r\n  }\r\n\r\n  //fetch code from express\r\n  fetchCode(id){\r\n    var endpoint = \"http://localhost:4000/findcodebyid/\"+id;\r\n    fetch(endpoint)\r\n    .then(data=>data.json()\r\n    .then(data=>{\r\n      this.updateCode(data.code);\r\n    })\r\n    )\r\n    .catch(err=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n  \r\n  //listens for socket.io emits\r\n  listenSocket=()=>{\r\n    \r\n    socket.connect();\r\n    let channel={\"room\":this.props.data.id}\r\n    console.log(\"listening socket\", channel)\r\n    socket.emit(\"join_room\",channel);\r\n\r\n    //calling update cursor function when gets coordinates from server\r\n    socket.on('coordinates',data=>{\r\n      console.log(data)\r\n      this.updateCursor(data)\r\n    })\r\n\r\n    //calling update code function when gets code from server\r\n    socket.on('code',data=>{\r\n      console.log(data);\r\n      this.updateCode(data.code)\r\n    });\r\n\r\n  }\r\n\r\n  //function to position duplicate cursor on user screen\r\n  updateCursor=(data)=>{\r\n    console.log(data)\r\n    let x=data.x\r\n    let y=data.y\r\n\r\n    y=y-10;\r\n\r\n    const cursor = document.getElementById('cursor');\r\n    cursor.style.left = x+'px';\r\n    cursor.style.top = y+'px';\r\n  }\r\n\r\n  //update the state code with code received from server\r\n  updateCode=(data)=>{\r\n    this.setState({\r\n      code:data\r\n    });\r\n  }\r\n\r\n\r\n  //start the socket connection to the server\r\n  componentDidMount(){\r\n      \r\n    console.log(\"calling componentDidMount\")\r\n    //get id as props\r\n    \r\n     this.turnOffSocket();\r\n    //  this.updateId(this.props.data.id);\r\n     this.startSocket();\r\n    //  //fetch code of given id\r\n    // //  this.updateCode(this.props.data.code);\r\n    this.fetchCode(this.props.data.id);\r\n\r\n      \r\n  }\r\n\r\n  render() {\r\n    const code = this.state.code;\r\n    const options = {\r\n      selectOnLineNumbers: true\r\n    };\r\n\r\n    return (\r\n      <div className=\"Editor-Parent\">\r\n      <div className=\"Editor-Category\">\r\n        <input type=\"button\" className=\"btn active\" ref=\"Editor\" onClick={()=>this.changeWindow(true)} value=\"Editor\"/>\r\n        <input type=\"button\" className=\"btn\" ref=\"Message\" onClick={()=>this.changeWindow(false)} value=\"Messages\"/>\r\n        {/* <input type=\"button\" className=\"btn\" ref=\"Data\" onClick={()=>this.sendCode()}  value=\"get Data\"/> */}\r\n      </div>\r\n      <div className=\"Editor\" onClick={this.sendCoords.bind(this)}>\r\n        <h3 id=\"cursor\">cursor</h3>\r\n      <MonacoEditor\r\n        width=\"80vw\"\r\n        height=\"90vh\"\r\n        language=\"javascript\"\r\n        theme=\"vs-dark\"\r\n        value={code}\r\n        options={options}\r\n        onChange={this.onChange}\r\n        editorDidMount={this.editorDidMount}\r\n      />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\DirectoryBar.js",["78","79","80","81"],"\r\nimport { Component } from 'react';\r\nimport Directory from './Directory'\r\nimport './DirectoryBar.css';\r\nimport Monaco from '../Monaco/index';\r\n\r\nclass DirectoryBar extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          user:\"user\",\r\n          directories:\"\",\r\n          arr:\"\",\r\n          subdirectory_data:\"\",\r\n          prevSubdirectory:\"\"\r\n        }\r\n      }\r\n      \r\n      //gets triggered on project change\r\n      componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props != prevProps){\r\n        var directories = this.props.directories ;\r\n        let count=directories.length\r\n          \r\n                var arr=[] \r\n\r\n                for(let i = 0 ; i < count ; i++ ){\r\n                  \r\n                  let element=<Directory id={directories[i]._id} name={directories[i].name} data={directories[i]} changeSubdirectory={this.changeSubdirectory}/>\r\n                  arr.push(element)\r\n                }\r\n              \r\n                  this.setState({\r\n                  // \"user\":user,\r\n                  \"directories\":directories,\r\n                  \"data\":arr,\r\n                })}\r\n      }\r\n      \r\n      activateSubdirectory=(newId)=>{\r\n\r\n        var activeObject = document.getElementById(newId);\r\n        \r\n        activeObject.classList.add(\"active-subdirectory\");\r\n        \r\n        var oldId = this.state.currentSubdirectory;\r\n        \r\n        this.setState({\r\n          prevSubdirectory:newId\r\n        })\r\n        \r\n      }\r\n      \r\n      deactivatePreviousSubdirectory=()=>{\r\n        \r\n        \r\n        var oldId = this.state.prevSubdirectory;\r\n\r\n        console.log(\"oldid\",oldId)\r\n        if(oldId != null && oldId != \"\"){\r\n          \r\n          var inactiveObject = document.getElementById(oldId);\r\n          \r\n          if(inactiveObject != undefined && inactiveObject != null){\r\n            inactiveObject.classList.remove(\"active-subdirectory\");\r\n          }\r\n          \r\n\r\n        }\r\n        \r\n\r\n      }\r\n      //changes sub directory of active window\r\n    changeSubdirectory=(data)=>{\r\n      \r\n      console.log(\"active window\",data)\r\n      this.deactivatePreviousSubdirectory();\r\n      this.activateSubdirectory(data.id);\r\n      \r\n      console.log(data)\r\n      this.setState({\r\n        \"subdirectory_data\":data\r\n      })\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        \r\n        <div className=\"DirectoryBar-parent\">\r\n          <div className=\"Directory\">\r\n            <div className=\"DirectoryBar-User\">\r\n\r\n                  {this.state.user.name}\r\n\r\n            </div>      \r\n\r\n            <div className=\"DirectoryBar-List\">\r\n\r\n                  {this.state.data}\r\n\r\n            </div>      \r\n          </div> \r\n\r\n          <div className=\"Monaco-Wrapper\">\r\n              <Monaco key={window.location.href} data={this.state.subdirectory_data}/>\r\n          </div>\r\n\r\n        </div>\r\n        \r\n  \r\n      )\r\n    }\r\n  }\r\n  \r\n  export default DirectoryBar;\r\n  ","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectBar.js",["82","83","84"],"\r\nimport { Component } from 'react';\r\nimport Element from './Element'\r\nimport './ProjectBar.css';\r\nimport DirectoryBar from '../Directory/DirectoryBar.js'\r\nimport url, { modifyUrl } from '../url'\r\nclass ProjectBar extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          data:\"\",\r\n          active_project:\"\",\r\n          projects:\"\"\r\n          \r\n        }\r\n      }\r\n      activeProject=(project_id)=>{\r\n        \r\n        var projects = this.state.projects;\r\n        var active_project=projects[project_id].directories\r\n        this.setState({\r\n          active_project\r\n        })\r\n      }\r\n\r\n      \r\n      componentDidMount(){\r\n        var user_id=\"5ff19908b3c5741086c9533c\"\r\n\r\n        var fetch_url='http://localhost:4000/finduserbyid/'+user_id;\r\n\r\n        fetch(fetch_url)\r\n        .then(data=>data.json())\r\n        .then(data=>{\r\n          \r\n          var count = data.projects.length;\r\n          var arr = []\r\n      \r\n          for( var i = 0 ; i < count ; i++ ){\r\n            var project=data.projects[i]\r\n            console.log(\"current project\",project._id,project.name)\r\n            var element=<Element index={i} id={project._id} name={project.name} directories={project[i]} activeProject={this.activeProject}/>\r\n            arr.push(element)\r\n          }\r\n          var active=0;\r\n\r\n          this.setState({\r\n            \"data\":arr,\r\n            \"projects\":data.projects,\r\n            \"active_project\":data.projects[0].directories\r\n          })\r\n        })\r\n          \r\n      }\r\n    render(){\r\n      return (\r\n        <div className=\"ProjectBar-parent\">\r\n          <div className=\"ProjectBar\">\r\n            <div className>\r\n                \r\n                {this.state.data}\r\n\r\n            </div>\r\n          </div>  \r\n          <DirectoryBar directories={this.state.active_project} /> \r\n        </div>\r\n  \r\n      )\r\n    }\r\n  }\r\n  \r\n  export default ProjectBar;\r\n  ","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\Directory.js",["85","86"],"import { Component } from 'react';\r\n// import Directory from './Directory'\r\nimport './Directory.css';\r\nimport Monaco from '../Monaco/index'\r\nimport url, { modifyUrl } from '../url'\r\nimport SubDirectory from './SubDirectory'\r\n\r\nclass Directory extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          name:\"directory\",\r\n          id:\"\",\r\n          data:\"\",\r\n          subdirectories:\"\"\r\n        }\r\n      }\r\n    goto=()=>{\r\n        var data={\"directory\":this.state.id}\r\n        var new_url = modifyUrl(data)\r\n        window.history.replaceState(null, \"New Page Title\", new_url)\r\n    }\r\n    componentDidMount=()=>{\r\n        // var directory = this.props.directory\r\n        // console.log(this.props.id)\r\n        // var name = directory.name\r\n        console.log(\r\n        \"directory\",\r\n        this.props.id\r\n        )\r\n        var subdirectories=this.props.data.subdirectories\r\n        var count = subdirectories.length\r\n        \r\n        var arr=[]\r\n        for(var i = 0 ; i < count ; i++){\r\n            var subdirectory = <SubDirectory directory_id={this.props.id} data = {subdirectories[i]} changeSubdirectory={this.props.changeSubdirectory} />\r\n            arr.push(subdirectory)\r\n        }\r\n\r\n         this.setState({\r\n             \"name\":this.props.name,\r\n             \"id\":this.props.id,\r\n             \"data\":this.props.data,\r\n             \"subdirectories\":arr\r\n         })\r\n        // var url = window.location.search\r\n        \r\n        // const urlParams = new URLSearchParams(url);\r\n        // const subdirectory = urlParams.get('subdirectory')\r\n        // console.log(\"sub\"+subdirectory)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Directory-Parent\" onClick={this.goto}>\r\n                <div id={this.props.directory_id} className=\"Directory\">\r\n                    <h4>#{this.state.name}</h4>\r\n                </div>\r\n               \r\n                {this.state.subdirectories}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Directory;","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\url.js",["87"],"\r\nexport function modifyUrl(data){\r\n    //get base url\r\n    var base_url=window.location.origin\r\n    \r\n    //get complete url\r\n    var url = window.location.search\r\n\r\n    //get url parameters\r\n    const urlParams = new URLSearchParams(url);\r\n    \r\n    //change url parameters\r\n    if(data.project_id){\r\n        urlParams.set(\"project_id\",data.project_id)\r\n    }\r\n    if(data.directory){\r\n        urlParams.set(\"directory\",data.directory)\r\n    }\r\n    if(data.subdirectory){\r\n        urlParams.set(\"subdirectory\",data.subdirectory)\r\n    }\r\n    var para=urlParams.toString();\r\n    //return the new url\r\n    var newUrl=base_url+'/?'+urlParams.toString()\r\n    return newUrl\r\n}\r\n\r\nexport function getParam(){\r\n    var url = window.location.search\r\n\r\n    const urlParams = new URLSearchParams(url)\r\n    \r\n    var body = {\r\n        \"project_id\":urlParams.get(\"project_id\"),\r\n        \"directory\":urlParams.get(\"directory\"),\r\n        \"subdirectory\":urlParams.get(\"subdirectory\")\r\n    }\r\n    \r\n    return body\r\n}","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\Element.js",["88","89","90","91","92"],"\r\nimport { Component } from 'react';\r\n\r\nimport './Element.css';\r\nimport ProjectBar from './ProjectBar.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { modifyUrl } from '../url';\r\n\r\nclass Element extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n      this.state={\r\n        'name':'name',\r\n        \"id\":'',\r\n        'data':''\r\n      }\r\n      // this.goto=goto.bind(this)\r\n    }\r\n    truncate=(str)=>{\r\n      let word= str.toUpperCase();\r\n      word=word[0];\r\n      return word\r\n    }\r\n\r\n    //adds project id into the url\r\n    goto=(e)=>{\r\n      this.props.activeProject(this.state.key)\r\n\r\n      var data={\r\n        \"project_id\":this.state.id\r\n      }\r\n\r\n      // this.props.history.push('/foo');\r\n\r\n\r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n      //get base url of current website\r\n      var base_url=window.location.origin;\r\n      // console.log(this.props.id)\r\n      // console.log(this.props.name)\r\n      // console.log(this.props.data)\r\n      //update the state\r\n      this.setState({\r\n        key:this.props.index,\r\n        id:this.props.id,\r\n        name:this.props.name,\r\n        data:this.props.data\r\n      })\r\n    }\r\n  render(){\r\n    return (\r\n      <div className=\"Element-parent\" id={this.state.id} onClick={this.goto} >\r\n        <div className=\"Element\">\r\n          <div className=\"Element-image-circle\" >\r\n            <h3 className=\"Element-image\" >{this.truncate(this.state.name)}</h3>\r\n          </div>\r\n        </div>      \r\n        \r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Element;\r\n","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\SubDirectory.js",["93","94","95","96","97","98"],"import  { Component,useContext } from 'react';\r\n// import SubDirectory from './SubDirectory'\r\nimport './SubDirectory.css';\r\nimport Monaco from '../Monaco/index'\r\nimport url, { getParam, modifyUrl } from '../url'\r\nimport { getCode,setCode } from '../Store';\r\nimport { monaco } from 'react-monaco-editor';\r\n// const MyContext = React.createContext();\r\n\r\n\r\n\r\n// import {callback} from '../Monaco/index'\r\nclass SubDirectory extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          name:\"subdirectory\",\r\n          id:\"\",\r\n          data:\"\",\r\n          url_params:\"\",\r\n          directory_id:this.props.directory_id\r\n        }\r\n        this.setCode=setCode.bind(this)\r\n        this.getCode=getCode.bind(this)\r\n      }\r\n\r\n    //handles click on subdirectory\r\n    //calls function received from directorybar->directory->subdirectory\r\n    handleClickOnSubDirectory=()=>{\r\n        var data={\r\n            \"id\":this.state.id,\r\n            \"directory_id\":this.props.directory_id,\r\n            \"code\":this.state.code\r\n        }\r\n        this.props.changeSubdirectory(data)\r\n    }\r\n    \r\n\r\n    //takes props from directory.js\r\n    //set props in state\r\n    componentDidMount=()=>{\r\n        console.log(\"subdirecotyr\",this.props)\r\n        var directory = this.props.data\r\n        var id=directory._id\r\n        var name = directory.name\r\n        var code = directory.code\r\n\r\n        var fetch_url = \"http://localhost:4000/findcodebyid/\"+id;\r\n\r\n        fetch(fetch_url)\r\n        .then(data=>console.log(data))\r\n        .catch(err=>console.log(err))\r\n        console.log(id)\r\n        \r\n         this.setState({\r\n             \"name\":name,\r\n             \"id\":id,\r\n             \"code\":code\r\n         })\r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n        return(\r\n\r\n            <div className=\"SubDirectory-Parent\" onClick={this.handleClickOnSubDirectory}>\r\n                <div id={this.state.id} className=\"SubDirectory\">\r\n                    <h4 >-->{this.state.name}</h4>        \r\n                </div>                \r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default SubDirectory;","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Store.js",[],["99","100"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Context.js",["101"],"import React,{Component} from 'react';\r\nexport const Context  = React.createContext();\r\n\r\nexport const ContextProvider=(props)=>{\r\n    var object = {\r\n        code:\"user code...\",\r\n\r\n        setCode : function(data){\r\n            this.code=data;\r\n        },\r\n\r\n        getCode : function(){\r\n            return this.code;\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Context.Provider value={object}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\n",{"ruleId":"102","severity":1,"message":"103","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":6,"column":24,"nodeType":"104","messageId":"105","endLine":6,"endColumn":32},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"102","severity":1,"message":"111","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"112","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":20},{"ruleId":"102","severity":1,"message":"113","line":25,"column":9,"nodeType":"104","messageId":"105","endLine":25,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":34,"column":21,"nodeType":"116","messageId":"117","endLine":34,"endColumn":23},{"ruleId":"114","severity":1,"message":"118","line":55,"column":23,"nodeType":"116","messageId":"117","endLine":55,"endColumn":25},{"ruleId":"102","severity":1,"message":"119","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":30},{"ruleId":"102","severity":1,"message":"120","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"121","line":7,"column":9,"nodeType":"104","messageId":"105","endLine":7,"endColumn":16},{"ruleId":"102","severity":1,"message":"122","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":18},{"ruleId":"102","severity":1,"message":"123","line":20,"column":5,"nodeType":"104","messageId":"105","endLine":20,"endColumn":9},{"ruleId":"124","severity":1,"message":"125","line":27,"column":7,"nodeType":"126","messageId":"117","endLine":27,"endColumn":11},{"ruleId":"114","severity":1,"message":"115","line":59,"column":27,"nodeType":"116","messageId":"117","endLine":59,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":23,"column":23,"nodeType":"116","messageId":"117","endLine":23,"endColumn":25},{"ruleId":"102","severity":1,"message":"127","line":48,"column":13,"nodeType":"104","messageId":"105","endLine":48,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":62,"column":35,"nodeType":"116","messageId":"117","endLine":62,"endColumn":37},{"ruleId":"114","severity":1,"message":"115","line":66,"column":29,"nodeType":"116","messageId":"117","endLine":66,"endColumn":31},{"ruleId":"102","severity":1,"message":"128","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":11},{"ruleId":"102","severity":1,"message":"129","line":6,"column":15,"nodeType":"104","messageId":"105","endLine":6,"endColumn":24},{"ruleId":"102","severity":1,"message":"130","line":46,"column":15,"nodeType":"104","messageId":"105","endLine":46,"endColumn":21},{"ruleId":"102","severity":1,"message":"111","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"102","severity":1,"message":"128","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":11},{"ruleId":"102","severity":1,"message":"131","line":22,"column":9,"nodeType":"104","messageId":"105","endLine":22,"endColumn":13},{"ruleId":"102","severity":1,"message":"132","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":18},{"ruleId":"102","severity":1,"message":"133","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":20},{"ruleId":"102","severity":1,"message":"129","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":19},{"ruleId":"102","severity":1,"message":"134","line":30,"column":11,"nodeType":"104","messageId":"105","endLine":30,"endColumn":15},{"ruleId":"102","severity":1,"message":"135","line":42,"column":11,"nodeType":"104","messageId":"105","endLine":42,"endColumn":19},{"ruleId":"102","severity":1,"message":"136","line":1,"column":21,"nodeType":"104","messageId":"105","endLine":1,"endColumn":31},{"ruleId":"102","severity":1,"message":"111","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"102","severity":1,"message":"128","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":11},{"ruleId":"102","severity":1,"message":"122","line":5,"column":15,"nodeType":"104","messageId":"105","endLine":5,"endColumn":23},{"ruleId":"102","severity":1,"message":"129","line":5,"column":25,"nodeType":"104","messageId":"105","endLine":5,"endColumn":34},{"ruleId":"102","severity":1,"message":"137","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":16},{"ruleId":"107","replacedBy":"138"},{"ruleId":"109","replacedBy":"139"},{"ruleId":"102","severity":1,"message":"140","line":1,"column":15,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"'Monaco' is defined but never used.","'DirectoryBar' is defined but never used.","'new_url' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'createElement' is defined but never used.","'render' is defined but never used.","'Context' is defined but never used.","'getParam' is defined but never used.","'room' is assigned a value but never used.","no-dupe-keys","Duplicate key 'code'.","ObjectExpression","'oldId' is assigned a value but never used.","'url' is defined but never used.","'modifyUrl' is defined but never used.","'active' is assigned a value but never used.","'para' is assigned a value but never used.","'ProjectBar' is defined but never used.","'useHistory' is defined but never used.","'data' is assigned a value but never used.","'base_url' is assigned a value but never used.","'useContext' is defined but never used.","'monaco' is defined but never used.",["141"],["142"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]