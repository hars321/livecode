[{"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\index.js":"1","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\reportWebVitals.js":"2","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\App.js":"3","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\index.js":"4","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectBar.js":"5","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\serverEndpoint.js":"6","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Register.js":"7","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\DirectoryBar\\DirectoryBar.js":"8","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\DirectoryBar\\Directory\\Directory.js":"9","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\DirectoryBar\\Directory\\Subdirectory\\SubDirectory.js":"10","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\Subdirectory\\SubDirectory.js":"11","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectElement\\Element.js":"12","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Signup\\Signup.js":"13","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Login\\Login.js":"14","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\Socket\\SocketService.js":"15"},{"size":706,"mtime":1617470654741,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1610276616987,"results":"18","hashOfConfig":"17"},{"size":1429,"mtime":1617471824498,"results":"19","hashOfConfig":"17"},{"size":6367,"mtime":1617476803199,"results":"20","hashOfConfig":"17"},{"size":4897,"mtime":1617471995288,"results":"21","hashOfConfig":"17"},{"size":119,"mtime":1613387971730,"results":"22","hashOfConfig":"17"},{"size":1249,"mtime":1617472182548,"results":"23","hashOfConfig":"17"},{"size":4989,"mtime":1617471483859,"results":"24","hashOfConfig":"17"},{"size":3758,"mtime":1617471469213,"results":"25","hashOfConfig":"17"},{"size":2580,"mtime":1617471592859,"results":"26","hashOfConfig":"17"},{"size":2580,"mtime":1617471589189,"results":"27","hashOfConfig":"17"},{"size":1691,"mtime":1617472013998,"results":"28","hashOfConfig":"17"},{"size":2877,"mtime":1617472128488,"results":"29","hashOfConfig":"17"},{"size":2598,"mtime":1617472122908,"results":"30","hashOfConfig":"17"},{"size":958,"mtime":1617474923770,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1u3itse",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\index.js",["68","69"],"import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route} from 'react-router';\r\nimport { BrowserRouter,Redirect } from 'react-router-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Route path='/' component={App}></Route> \r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["70","71"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\reportWebVitals.js",[],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\App.js",["72","73","74"],"import ProjectBar from './Project/ProjectBar';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport { ENDPOINT } from './serverEndpoint.js';\r\nimport Register from './Register.js/Register';\r\n\r\n// App.js \r\n\r\n// functionality -> fetches the details of the current user \r\n// we have the current user_id stored in the cookie as the jwt\r\n// get the current user details using jwt token\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      data:\"\",\r\n      projects:\"\",\r\n      directory:\"\",\r\n      user:\"\",\r\n      id:\"\"\r\n    }\r\n  }\r\n  componentDidMount=()=>{\r\n    //fetch the details of current user using /finduserbyid/${user_id}\r\n    // update the state of current user\r\n    // pass the props down to ProjectBar.js \r\n    var id = localStorage.getItem('_id');\r\n    this.setState({\r\n      id:id\r\n    })\r\n  }\r\n\r\n  setUserId=(user_id)=>{\r\n    this.setState({\r\n      id:user_id\r\n    })\r\n  }\r\n\r\n  logout=()=>{\r\n    // delete localstorage\r\n    localStorage.removeItem('_id');\r\n\r\n    this.setState({\r\n      id:\"\"\r\n    })\r\n  }\r\n  // componentDidMount(){\r\n    \r\n  // }\r\n  render(){\r\n    if(this.state.id==\"\" || this.state.id == undefined){\r\n      return(\r\n        <div className=\"App\" >\r\n          <Register setUserId={this.setUserId}/>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <ProjectBar logout={this.logout}/>\r\n      )\r\n    }\r\n    \r\n}\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\index.js",["75","76","77"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectBar.js",["78","79","80"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\serverEndpoint.js",[],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Register.js",["81"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\DirectoryBar\\DirectoryBar.js",["82","83"],"\r\nimport { Component } from 'react';\r\nimport Directory from './Directory/Directory'\r\nimport './DirectoryBar.css';\r\nimport Monaco from '../Monaco/index';\r\n\r\n\r\n// Parent Component is ProjectBar\r\n      // props received are -> directories : json object that holds details of all the directories of CURRENT project\r\n\r\n// Child Components :\r\n      \r\n      // Directory \r\n          // props passed:\r\n              // id => id of the current directory\r\n              // name => name of the current directory\r\n              // subdirectories => data of all the directories\r\n              // data => directory + subdirectory data\r\n              // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon \r\n              //                        this function is passed to => directory => subdirectory.js (here click event is trigerred)\r\n              \r\n      // Monaco Editor\r\n        // props passed:\r\n            // data => subdirectories data -> has the data of all the directories and project id\r\n\r\nclass DirectoryBar extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          user:\"user\",\r\n          directories:\"\",\r\n          arr:\"\",\r\n          subdirectory_data:\"\",\r\n          project_name:\"\",\r\n          project_id:\"\",\r\n          project_description:\"\"\r\n\r\n        }\r\n      }\r\n      updateProjectDetails=(project_details)=>{\r\n        this.setState({\r\n          project_name:project_details.name,\r\n          project_id:project_details._id,\r\n          project_description:project_details.description\r\n        })\r\n      }\r\n      //gets triggered on project change\r\n      componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props != prevProps){\r\n          console.log(\"directorybar\",this.props.project_details)\r\n          this.updateProjectDetails(this.props.project_details)\r\n        var directories = this.props.directories ;\r\n        let count=directories.length\r\n          \r\n                var arr=[] \r\n\r\n                for(let i = 0 ; i < count ; i++ ){\r\n                  \r\n                  let element=<Directory id={directories[i]._id} name={directories[i].name} subdirectories={directories[i].subdirectories}  data={directories[i]} changeSubdirectory={this.changeSubdirectory}/>\r\n                  arr.push(element)\r\n                }\r\n              \r\n                  this.setState({\r\n                  // \"user\":user,\r\n                  \"directories\":directories,\r\n                  \"data\":arr,\r\n                })}\r\n      }\r\n\r\n      //function gets triggerred when the user changes(clicks) subdirectory\r\n      //adds the active-subdirectory class to subdirectory object\r\n      activateSubdirectory=(newId)=>{\r\n        //newId is the id of the element that is clicked\r\n\r\n        var activeObject = document.getElementById(newId);\r\n        \r\n        if(activeObject!=undefined && activeObject!=null){\r\n          activeObject.classList.add(\"active-subdirectory\");\r\n        }\r\n      \r\n      }\r\n      \r\n      //function gets triggerred when the user changes(clicks) subdirectory\r\n      //removes the active-subdirectory class from all the subdirectory object\r\n      deactivatePreviousSubdirectory=()=>{\r\n        \r\n          var inactiveObject = document.getElementsByClassName(\"SubDirectory\");\r\n        \r\n          for(let itr = 0 ; itr < inactiveObject.length ; itr ++){\r\n            inactiveObject[itr].classList.remove(\"active-subdirectory\");\r\n          }\r\n\r\n      }\r\n\r\n      //changes sub directory \r\n      // trigerred when user changes(clicks) subdirectory\r\n      // passed from director-bar to directory to subdirectory\r\n      changeSubdirectory=(data)=>{\r\n\r\n        //data holds the details of the subdirectory being clicked\r\n        console.log(data)\r\n        this.deactivatePreviousSubdirectory();\r\n\r\n        this.activateSubdirectory(data.id);\r\n        \r\n        this.setState({\r\n          \"subdirectory_data\":data\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    \r\n    render(){\r\n      return (\r\n        \r\n        <div className=\"DirectoryBar-parent\">\r\n          <div className=\"Directory\">\r\n            <div className=\"DirectoryBar-User\">\r\n\r\n                {/* <div className=\"Project-Name Project-Details\">\r\n                  {this.state.project_name}\r\n                </div> */}\r\n                <div className=\"Project-Description Project-Details\">\r\n                  {this.state.project_description}\r\n                </div>\r\n                <div className=\"Project-Id Project-Details\">\r\n                  ({this.state.project_id})\r\n                </div>\r\n              \r\n\r\n            </div>      \r\n\r\n            <div className=\"DirectoryBar-List\">\r\n\r\n                  {this.state.data}\r\n\r\n            </div>      \r\n          </div> \r\n\r\n          <div className=\"Monaco-Wrapper\">\r\n\r\n              <Monaco data={this.state.subdirectory_data}/>\r\n              \r\n          </div>\r\n\r\n        </div>\r\n        \r\n  \r\n      )\r\n    }\r\n  }\r\n  \r\n  export default DirectoryBar;\r\n  ","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\DirectoryBar\\Directory\\Directory.js",["84","85"],"import { Component } from 'react';\r\nimport './Directory.css';\r\nimport Monaco from '../../Monaco/index'\r\nimport SubDirectory from './Subdirectory/SubDirectory'\r\n\r\n\r\n// Parent Component is DirectoryBar\r\n      // props received are -> directories : json object that holds details of all the directories of CURRENT project\r\n            // id => id of the current directory\r\n            // name => name of the current directory\r\n            // subdirectories => data of all the directories\r\n            // data => directory + subdirectory data\r\n            // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon \r\n            //                        this function is received from directorybar and is passed to subdirectory.js\r\n            //                        (from) Directorybar => directory => subdirectory.js (pass it down as props)\r\n\r\n// Child Components :\r\n      \r\n      // SubDirectory \r\n          // props passed:\r\n            // subdirectory_id => id of i-th subdirectory of current directory\r\n            // directory_id => id of the current directory\r\n            // data => json object - details of the sub-directories \r\n            // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon\r\n            //                        this function is received from directorybar and is passed to subdirectory.js\r\n            //                        (from) Directorybar => directory => subdirectory.js (pass it down as props)\r\n            \r\nclass Directory extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          name:\"directory\",\r\n          id:\"\",\r\n          data:\"\",\r\n          subdirectories:\"\"\r\n        }\r\n      }\r\n   \r\n      // when props from the parent component changes the following function gets trigerred\r\n      // when new project is clicked => the active project changes => the props passed down also gets changed => function gets trigerred\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props!=prevProps){\r\n            var subdirectories=this.props.subdirectories\r\n            var count = subdirectories.length\r\n        \r\n            var arr=[]\r\n\r\n        for(var i = 0 ; i < count ; i++){\r\n            var subdirectory = <SubDirectory subdirectory_id={subdirectories[i]._id} directory_id={this.props.id} data = {subdirectories[i]} changeSubdirectory={this.props.changeSubdirectory} />\r\n            arr.push(subdirectory)\r\n        }\r\n\r\n         this.setState({\r\n             \"name\":this.props.name,\r\n             \"id\":this.props.id,\r\n             \"data\":this.props.data,\r\n             \"subdirectories\":arr\r\n         })\r\n        }\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        \r\n        var subdirectories=this.props.subdirectories\r\n        var count = subdirectories.length\r\n        \r\n        var arr=[]\r\n        for(var i = 0 ; i < count ; i++){\r\n            var subdirectory = <SubDirectory subdirectory_id={subdirectories[i]._id} directory_id={this.props.id} data = {subdirectories[i]} changeSubdirectory={this.props.changeSubdirectory} />\r\n            arr.push(subdirectory)\r\n        }\r\n\r\n         this.setState({\r\n             \"name\":this.props.name,\r\n             \"id\":this.props.id,\r\n             \"data\":this.props.data,\r\n             \"subdirectories\":arr\r\n         })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Directory-Parent\" onClick={this.goto}>\r\n                <div id={this.props.directory_id} className=\"Directory\">\r\n                    <h4>#{this.state.name}</h4>\r\n                </div>\r\n               \r\n                {this.state.subdirectories}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Directory;","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\DirectoryBar\\Directory\\Subdirectory\\SubDirectory.js",["86"],"import  { Component } from 'react';\r\nimport './SubDirectory.css';\r\nimport { ENDPOINT } from '../../../serverEndpoint';\r\n\r\n\r\n\r\n// => Parent is Directory \r\n//     => props received :\r\n            // subdirectory_id => id of i-th subdirectory of current directory\r\n            // directory_id => id of the current directory\r\n            // data => json object - details of the sub-directories \r\n            // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon\r\n            //                        this function is received from directorybar and is passed to subdirectory.js\r\n            //                        (from) Directorybar => directory => subdirectory.js (pass it down as props)\r\n\r\n\r\nclass SubDirectory extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          name:\"subdirectory\",\r\n          id:\"\",\r\n          data:\"\",\r\n          url_params:\"\",\r\n          directory_id:this.props.directory_id\r\n        }\r\n      }\r\n\r\n    //  handles click when current component is clicked (i.e.,  subdirectory changes )\r\n    //  calls function received from directorybar->directory->subdirectory\r\n    //  when current subdirectory is clicked changesubdirectory function is called\r\n    \r\n    handleClickOnSubDirectory=()=>{\r\n\r\n        var data={\r\n            \"id\":this.props.subdirectory_id,\r\n            \"directory_id\":this.props.directory_id,\r\n            \"code\":this.state.code\r\n        }\r\n        this.props.changeSubdirectory(data)\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if(prevProps!=this.props){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //takes props from directory.js\r\n    //set props in state\r\n    componentDidMount=()=>{\r\n        \r\n        var directory = this.props.data\r\n        var id=this.props.directory_id\r\n        var name = directory.name\r\n\r\n        var fetch_url = ENDPOINT+'/'+id;\r\n\r\n        fetch(fetch_url)\r\n        .then(data=>console.log(data))\r\n        .catch(err=>console.log(err))\r\n        \r\n         this.setState({\r\n             \"name\":name,\r\n             \"id\":id\r\n         })\r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n        return(\r\n\r\n            <div className=\"SubDirectory-Parent\" onClick={this.handleClickOnSubDirectory}>\r\n                <div id={this.props.subdirectory_id} className=\"SubDirectory\">\r\n                    <h4 >--&gt;{this.props.data.name}</h4>        \r\n                </div>                \r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default SubDirectory;","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\Subdirectory\\SubDirectory.js",["87"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectElement\\Element.js",["88","89","90"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Signup\\Signup.js",["91"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Register.js\\Login\\Login.js",["92"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\Socket\\SocketService.js",[],{"ruleId":"93","severity":1,"message":"94","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"93","severity":1,"message":"97","line":6,"column":24,"nodeType":"95","messageId":"96","endLine":6,"endColumn":32},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"93","severity":1,"message":"102","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":52,"column":21,"nodeType":"105","messageId":"106","endLine":52,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":52,"column":43,"nodeType":"105","messageId":"106","endLine":52,"endColumn":45},{"ruleId":"93","severity":1,"message":"107","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":30},{"ruleId":"93","severity":1,"message":"108","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"109","line":208,"column":22,"nodeType":"105","messageId":"106","endLine":208,"endColumn":24},{"ruleId":"103","severity":1,"message":"109","line":61,"column":38,"nodeType":"105","messageId":"106","endLine":61,"endColumn":40},{"ruleId":"93","severity":1,"message":"110","line":101,"column":13,"nodeType":"95","messageId":"96","endLine":101,"endColumn":20},{"ruleId":"93","severity":1,"message":"111","line":118,"column":15,"nodeType":"95","messageId":"96","endLine":118,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":24,"column":32,"nodeType":"105","messageId":"106","endLine":24,"endColumn":34},{"ruleId":"103","severity":1,"message":"109","line":51,"column":23,"nodeType":"105","messageId":"106","endLine":51,"endColumn":25},{"ruleId":"103","severity":1,"message":"109","line":79,"column":24,"nodeType":"105","messageId":"106","endLine":79,"endColumn":26},{"ruleId":"93","severity":1,"message":"112","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"103","severity":1,"message":"109","line":44,"column":22,"nodeType":"105","messageId":"106","endLine":44,"endColumn":24},{"ruleId":"103","severity":1,"message":"109","line":46,"column":21,"nodeType":"105","messageId":"106","endLine":46,"endColumn":23},{"ruleId":"103","severity":1,"message":"109","line":46,"column":21,"nodeType":"105","messageId":"106","endLine":46,"endColumn":23},{"ruleId":"93","severity":1,"message":"113","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":18},{"ruleId":"93","severity":1,"message":"114","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":29,"column":13,"nodeType":"105","messageId":"106","endLine":29,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":26,"column":23,"nodeType":"105","messageId":"106","endLine":26,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":28,"column":23,"nodeType":"105","messageId":"106","endLine":28,"endColumn":25},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["115"],"no-negated-in-lhs",["116"],"'ENDPOINT' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createElement' is defined but never used.","'render' is defined but never used.","Expected '!==' and instead saw '!='.","'user_id' is assigned a value but never used.","'active' is assigned a value but never used.","'Monaco' is defined but never used.","'ProjectBar' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]