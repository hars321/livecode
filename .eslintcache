[{"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\index.js":"1","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\reportWebVitals.js":"2","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\App.js":"3","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\index.js":"4","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\DirectoryBar.js":"5","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectBar.js":"6","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\Directory.js":"7","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\url.js":"8","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\Element.js":"9","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\SubDirectory.js":"10","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Store.js":"11","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Context.js":"12","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\serverEndpoint.js":"13"},{"size":780,"mtime":1610535546712,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1610276616987,"results":"16","hashOfConfig":"15"},{"size":1400,"mtime":1613220709273,"results":"17","hashOfConfig":"15"},{"size":6531,"mtime":1613370928934,"results":"18","hashOfConfig":"15"},{"size":4224,"mtime":1613364384616,"results":"19","hashOfConfig":"15"},{"size":3493,"mtime":1613224892595,"results":"20","hashOfConfig":"15"},{"size":3823,"mtime":1613231396534,"results":"21","hashOfConfig":"15"},{"size":1001,"mtime":1610451069728,"results":"22","hashOfConfig":"15"},{"size":2061,"mtime":1613225043006,"results":"23","hashOfConfig":"15"},{"size":2571,"mtime":1613366521052,"results":"24","hashOfConfig":"15"},{"size":171,"mtime":1610357452353,"results":"25","hashOfConfig":"15"},{"size":474,"mtime":1610371427634,"results":"26","hashOfConfig":"15"},{"size":119,"mtime":1613028881705,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1u3itse",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\index.js",["65","66"],"import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route} from 'react-router';\r\nimport { BrowserRouter,Redirect } from 'react-router-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    {/* <Redirect to={`/project_id=1&directory=1&subdirectory=1`} /> */}\r\n      <Route path='/' component={App}></Route> \r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["67","68"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\reportWebVitals.js",[],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\App.js",["69","70"],"import ProjectBar from './Project/ProjectBar';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport { ENDPOINT } from './serverEndpoint.js';\r\n\r\n// App.js \r\n\r\n// functionality -> fetches the details of the current user \r\n// we have the current user_id stored in the cookie as the jwt\r\n// get the current user details using jwt token\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      data:\"\",\r\n      projects:\"\",\r\n      directory:\"\",\r\n      user:\"\"\r\n    }\r\n  }\r\n  componentDidMount=()=>{\r\n    //fetch the details of current user using /finduserbyid/${user_id}\r\n    // update the state of current user\r\n    // pass the props down to ProjectBar.js \r\n\r\n    var uid = \"60269f1055f0113dd06a4b08\"\r\n    var url = ENDPOINT + \"/finduserbyid/\"+uid;\r\n    \r\n    fetch(url)\r\n \r\n    .then(data=>data.json())\r\n    .then(data=>{\r\n      \r\n      if(data.length!=0)\r\n      {\r\n        \r\n        this.setState({\r\n          data:data,\r\n          user:data,\r\n          projects:data.projects,\r\n\r\n        })\r\n      }\r\n      \r\n    })\r\n    .catch(err=>console.log(err))\r\n    \r\n   \r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    if(this.state.data==\"\"){\r\n      return(\r\n        <div className=\"App\">\r\n          Loading ....\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"App\" >\r\n        \r\n        <ProjectBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Monaco\\index.js",["71","72","73"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\DirectoryBar.js",["74","75"],"\r\nimport { Component } from 'react';\r\nimport Directory from './Directory'\r\nimport './DirectoryBar.css';\r\nimport Monaco from '../Monaco/index';\r\n\r\n\r\n// Parent Component is ProjectBar\r\n      // props received are -> directories : json object that holds details of all the directories of CURRENT project\r\n\r\n// Child Components :\r\n      \r\n      // Directory \r\n          // props passed:\r\n              // id => id of the current directory\r\n              // name => name of the current directory\r\n              // subdirectories => data of all the directories\r\n              // data => directory + subdirectory data\r\n              // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon \r\n              //                        this function is passed to => directory => subdirectory.js (here click event is trigerred)\r\n              \r\n      // Monaco Editor\r\n        // props passed:\r\n            // data => subdirectories data -> has the data of all the directories and project id\r\n\r\nclass DirectoryBar extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          user:\"user\",\r\n          directories:\"\",\r\n          arr:\"\",\r\n          subdirectory_data:\"\",\r\n          prevSubdirectory:\"\"\r\n        }\r\n      }\r\n      \r\n      //gets triggered on project change\r\n      componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props != prevProps){\r\n          // console.log(\"directorybar compupate\",this.props)\r\n        var directories = this.props.directories ;\r\n        let count=directories.length\r\n          \r\n                var arr=[] \r\n\r\n                for(let i = 0 ; i < count ; i++ ){\r\n                  \r\n                  let element=<Directory id={directories[i]._id} name={directories[i].name} subdirectories={directories[i].subdirectories}  data={directories[i]} changeSubdirectory={this.changeSubdirectory}/>\r\n                  arr.push(element)\r\n                }\r\n              \r\n                  this.setState({\r\n                  // \"user\":user,\r\n                  \"directories\":directories,\r\n                  \"data\":arr,\r\n                })}\r\n      }\r\n\r\n      //function gets triggerred when the user changes(clicks) subdirectory\r\n      //adds the active-subdirectory class to subdirectory object\r\n      activateSubdirectory=(newId)=>{\r\n        //newId is the id of the element that is clicked\r\n\r\n        var activeObject = document.getElementById(newId);\r\n        \r\n        if(activeObject!=undefined && activeObject!=null){\r\n          activeObject.classList.add(\"active-subdirectory\");\r\n        }\r\n      \r\n      }\r\n      \r\n      //function gets triggerred when the user changes(clicks) subdirectory\r\n      //removes the active-subdirectory class from all the subdirectory object\r\n      deactivatePreviousSubdirectory=()=>{\r\n        \r\n          var inactiveObject = document.getElementsByClassName(\"SubDirectory\");\r\n        \r\n          for(let itr = 0 ; itr < inactiveObject.length ; itr ++){\r\n            inactiveObject[itr].classList.remove(\"active-subdirectory\");\r\n          }\r\n\r\n      }\r\n\r\n      //changes sub directory \r\n      // trigerred when user changes(clicks) subdirectory\r\n      // passed from director-bar to directory to subdirectory\r\n      changeSubdirectory=(data)=>{\r\n\r\n        //data holds the details of the subdirectory being clicked\r\n        console.log(data)\r\n        this.deactivatePreviousSubdirectory();\r\n\r\n        this.activateSubdirectory(data.id);\r\n        \r\n        this.setState({\r\n          \"subdirectory_data\":data\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    \r\n    render(){\r\n      return (\r\n        \r\n        <div className=\"DirectoryBar-parent\">\r\n          <div className=\"Directory\">\r\n            <div className=\"DirectoryBar-User\">\r\n\r\n                  {this.state.user.name}\r\n\r\n            </div>      \r\n\r\n            <div className=\"DirectoryBar-List\">\r\n\r\n                  {this.state.data}\r\n\r\n            </div>      \r\n          </div> \r\n\r\n          <div className=\"Monaco-Wrapper\">\r\n\r\n              <Monaco data={this.state.subdirectory_data}/>\r\n              \r\n          </div>\r\n\r\n        </div>\r\n        \r\n  \r\n      )\r\n    }\r\n  }\r\n  \r\n  export default DirectoryBar;\r\n  ","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\ProjectBar.js",["76"],"\r\nimport { Component } from 'react';\r\nimport Element from './Element'\r\nimport './ProjectBar.css';\r\nimport DirectoryBar from '../Directory/DirectoryBar.js'\r\nimport { ENDPOINT } from '../serverEndpoint';\r\n\r\n\r\n\r\n// ProjectBar is child of ../App.js\r\n// App.js passes data as props\r\n\r\n// Props received is an array which contains projects data \r\n    //prop name : Projects\r\n\r\n// Child of ProjectBar is Element.js\r\n// child is ProjectBar is -> \r\n\r\n    //  -> Element.js \r\n\r\n        // Element.js : This component holds the details of the projects\r\n        // props passed are :\r\n            // index -> current index in the loop is passed \r\n            // id -> the project id \r\n            // name -> the peoject name\r\n            // directories -> the directories present in the current project\r\n            // function activeProject -> this function is responsible for changing the current active project\r\n    \r\n    //  -> DirectoryBar.js\r\n        // DirectoryBar.js -> This component renders all the directories present in current active project\r\n        // props passed are -> directories : json object that holds all the directories of CURRENT ACTIVE project\r\n        \r\n\r\n\r\n// DirectoryBar is passed current active project details \r\nclass ProjectBar extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          data:\"\",\r\n          active_project:\"\",\r\n          projects:\"\"\r\n          \r\n        }\r\n      }\r\n\r\n      // when project elment is clicked following function is called\r\n      // function changes existing project\r\n      // function is passed as props to element.js\r\n      \r\n      activeProject=(project_id)=>{\r\n        \r\n\r\n        var projects = this.state.projects;\r\n        \r\n        // replacing the index of previous project in the array with the current project index\r\n        var active_project=projects[project_id].directories\r\n\r\n\r\n        // setting state of current active project\r\n        this.setState({\r\n          active_project\r\n        })\r\n\r\n      }\r\n\r\n      \r\n\r\n      // get data from props -> this.props.projects\r\n      // get all the projects from this.props.projects and make an array\r\n      // render the array element currently clicked\r\n      componentDidMount(){\r\n        var uid = \"60269f1055f0113dd06a4b08\"\r\n\r\n        var fetch_url=ENDPOINT+'/finduserbyid/'+uid;\r\n        console.log(fetch_url);\r\n        fetch(fetch_url)\r\n        .then(data=>data.json())\r\n        .then(data=>{\r\n          \r\n          var count = data.projects.length;\r\n          var arr = []\r\n      \r\n          for( var i = 0 ; i < count ; i++ ){\r\n            var project=data.projects[i]\r\n            console.log(\"current project\",project._id,project.name)\r\n            var element=<Element index={i} id={project._id} name={project.name} directories={project[i]} activeProject={this.activeProject}/>\r\n            arr.push(element)\r\n          }\r\n          var active=0;\r\n\r\n          this.setState({\r\n            \"data\":arr,\r\n            \"projects\":data.projects,\r\n            \"active_project\":data.projects[0].directories\r\n          })\r\n        })\r\n          \r\n      }\r\n    render(){\r\n      return (\r\n        <div className=\"ProjectBar-parent\">\r\n          <div className=\"ProjectBar\">\r\n            <div className>\r\n                \r\n                {this.state.data}\r\n\r\n            </div>\r\n          </div>  \r\n          <DirectoryBar directories={this.state.active_project} /> \r\n        </div>\r\n  \r\n      )\r\n    }\r\n  }\r\n  \r\n  export default ProjectBar;\r\n  ","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\Directory.js",["77","78","79","80"],"import { Component } from 'react';\r\n// import Directory from './Directory'\r\nimport './Directory.css';\r\nimport Monaco from '../Monaco/index'\r\nimport url, { modifyUrl } from '../url'\r\nimport SubDirectory from './SubDirectory'\r\n\r\n\r\n// Parent Component is DirectoryBar\r\n      // props received are -> directories : json object that holds details of all the directories of CURRENT project\r\n            // id => id of the current directory\r\n            // name => name of the current directory\r\n            // subdirectories => data of all the directories\r\n            // data => directory + subdirectory data\r\n            // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon \r\n            //                        this function is received from directorybar and is passed to subdirectory.js\r\n            //                        (from) Directorybar => directory => subdirectory.js (pass it down as props)\r\n\r\n// Child Components :\r\n      \r\n      // SubDirectory \r\n          // props passed:\r\n            // subdirectory_id => id of i-th subdirectory of current directory\r\n            // directory_id => id of the current directory\r\n            // data => json object - details of the sub-directories \r\n            // changeSubdirectory => function changes current active subdirectory when subdirectory is clicked upon\r\n            //                        this function is received from directorybar and is passed to subdirectory.js\r\n            //                        (from) Directorybar => directory => subdirectory.js (pass it down as props)\r\n            \r\nclass Directory extends Component{\r\n\r\n    constructor(props){\r\n      super(props)\r\n        this.state={\r\n          name:\"directory\",\r\n          id:\"\",\r\n          data:\"\",\r\n          subdirectories:\"\"\r\n        }\r\n      }\r\n   \r\n      // when props from the parent component changes the following function gets trigerred\r\n      // when new project is clicked => the active project changes => the props passed down also gets changed => function gets trigerred\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props!=prevProps){\r\n            var subdirectories=this.props.subdirectories\r\n            var count = subdirectories.length\r\n        \r\n            var arr=[]\r\n\r\n        for(var i = 0 ; i < count ; i++){\r\n            var subdirectory = <SubDirectory subdirectory_id={subdirectories[i]._id} directory_id={this.props.id} data = {subdirectories[i]} changeSubdirectory={this.props.changeSubdirectory} />\r\n            arr.push(subdirectory)\r\n        }\r\n\r\n         this.setState({\r\n             \"name\":this.props.name,\r\n             \"id\":this.props.id,\r\n             \"data\":this.props.data,\r\n             \"subdirectories\":arr\r\n         })\r\n        }\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        \r\n        var subdirectories=this.props.subdirectories\r\n        var count = subdirectories.length\r\n        \r\n        var arr=[]\r\n        for(var i = 0 ; i < count ; i++){\r\n            var subdirectory = <SubDirectory subdirectory_id={subdirectories[i]._id} directory_id={this.props.id} data = {subdirectories[i]} changeSubdirectory={this.props.changeSubdirectory} />\r\n            arr.push(subdirectory)\r\n        }\r\n\r\n         this.setState({\r\n             \"name\":this.props.name,\r\n             \"id\":this.props.id,\r\n             \"data\":this.props.data,\r\n             \"subdirectories\":arr\r\n         })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Directory-Parent\" onClick={this.goto}>\r\n                <div id={this.props.directory_id} className=\"Directory\">\r\n                    <h4>#{this.state.name}</h4>\r\n                </div>\r\n               \r\n                {this.state.subdirectories}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Directory;","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\url.js",["81"],"\r\nexport function modifyUrl(data){\r\n    //get base url\r\n    var base_url=window.location.origin\r\n    \r\n    //get complete url\r\n    var url = window.location.search\r\n\r\n    //get url parameters\r\n    const urlParams = new URLSearchParams(url);\r\n    \r\n    //change url parameters\r\n    if(data.project_id){\r\n        urlParams.set(\"project_id\",data.project_id)\r\n    }\r\n    if(data.directory){\r\n        urlParams.set(\"directory\",data.directory)\r\n    }\r\n    if(data.subdirectory){\r\n        urlParams.set(\"subdirectory\",data.subdirectory)\r\n    }\r\n    var para=urlParams.toString();\r\n    //return the new url\r\n    var newUrl=base_url+'/?'+urlParams.toString()\r\n    return newUrl\r\n}\r\n\r\nexport function getParam(){\r\n    var url = window.location.search\r\n\r\n    const urlParams = new URLSearchParams(url)\r\n    \r\n    var body = {\r\n        \"project_id\":urlParams.get(\"project_id\"),\r\n        \"directory\":urlParams.get(\"directory\"),\r\n        \"subdirectory\":urlParams.get(\"subdirectory\")\r\n    }\r\n    \r\n    return body\r\n}","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Project\\Element.js",["82","83","84","85","86"],"\r\nimport { Component } from 'react';\r\n\r\nimport './Element.css';\r\nimport ProjectBar from './ProjectBar.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { modifyUrl } from '../url';\r\n\r\n// Parent Component is ProjectBar\r\n\r\n\r\n// props received are :\r\n            // index -> index of the current project in the array\r\n            // id -> the project id \r\n            // name -> the peoject name\r\n            // directories -> the directories present in the current project\r\n            // function activeProject -> this function is responsible for changing the current active project\r\nclass Element extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n      this.state={\r\n        'name':'name',\r\n        \"id\":'',\r\n        'data':''\r\n      }\r\n      // this.goto=goto.bind(this)\r\n    }\r\n    truncate=(str)=>{\r\n      if(str==undefined){\r\n        return;\r\n      }\r\n      let word= str.toUpperCase();\r\n      word=word[0];\r\n      return word\r\n    }\r\n\r\n    //adds project id into the url\r\n    goto=(e)=>{\r\n      console.log(\"clicked on project\",this.state.id)\r\n      this.props.activeProject(this.state.key)\r\n        \r\n      // var data={\r\n      //   \"project_id\":this.state.id\r\n      // }\r\n\r\n      // this.props.history.push('/foo');\r\n\r\n\r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n      //get base url of current website\r\n      var base_url=window.location.origin;\r\n      // console.log(this.props.id)\r\n      // console.log(this.props.name)\r\n      // console.log(this.props.data)\r\n      //update the state\r\n      this.setState({\r\n        key:this.props.index,\r\n        id:this.props.id,\r\n        name:this.props.name,\r\n        data:this.props.data\r\n      })\r\n    }\r\n  render(){\r\n    return (\r\n      <div className=\"Element-parent\" id={this.state.id} onClick={this.goto} >\r\n        <div className=\"Element\">\r\n          <div className=\"Element-image-circle\" >\r\n            <h3 className=\"Element-image\" >{this.truncate(this.state.name)}</h3>\r\n          </div>\r\n        </div>      \r\n        \r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Element;\r\n","C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Directory\\SubDirectory.js",["87"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Store.js",[],["88","89"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\Context.js",["90"],"import React,{Component} from 'react';\r\nexport const Context  = React.createContext();\r\n\r\nexport const ContextProvider=(props)=>{\r\n    var object = {\r\n        code:\"user code...\",\r\n\r\n        setCode : function(data){\r\n            this.code=data;\r\n        },\r\n\r\n        getCode : function(){\r\n            return this.code;\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Context.Provider value={object}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\n",["91","92"],"C:\\Users\\harshit\\Desktop\\projects\\livecode\\livecode\\src\\serverEndpoint.js",[],{"ruleId":"93","severity":1,"message":"94","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"93","severity":1,"message":"97","line":6,"column":24,"nodeType":"95","messageId":"96","endLine":6,"endColumn":32},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":35,"column":21,"nodeType":"104","messageId":"105","endLine":35,"endColumn":23},{"ruleId":"102","severity":1,"message":"106","line":55,"column":23,"nodeType":"104","messageId":"105","endLine":55,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":30},{"ruleId":"93","severity":1,"message":"108","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":247,"column":22,"nodeType":"104","messageId":"105","endLine":247,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":42,"column":23,"nodeType":"104","messageId":"105","endLine":42,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":69,"column":24,"nodeType":"104","messageId":"105","endLine":69,"endColumn":26},{"ruleId":"93","severity":1,"message":"109","line":91,"column":15,"nodeType":"95","messageId":"96","endLine":91,"endColumn":21},{"ruleId":"93","severity":1,"message":"110","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"111","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":11},{"ruleId":"93","severity":1,"message":"112","line":5,"column":15,"nodeType":"95","messageId":"96","endLine":5,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":46,"column":22,"nodeType":"104","messageId":"105","endLine":46,"endColumn":24},{"ruleId":"93","severity":1,"message":"113","line":22,"column":9,"nodeType":"95","messageId":"96","endLine":22,"endColumn":13},{"ruleId":"93","severity":1,"message":"114","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":18},{"ruleId":"93","severity":1,"message":"115","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":20},{"ruleId":"93","severity":1,"message":"112","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":19},{"ruleId":"102","severity":1,"message":"106","line":30,"column":13,"nodeType":"104","messageId":"105","endLine":30,"endColumn":15},{"ruleId":"93","severity":1,"message":"116","line":55,"column":11,"nodeType":"95","messageId":"96","endLine":55,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":46,"column":21,"nodeType":"104","messageId":"105","endLine":46,"endColumn":23},{"ruleId":"98","replacedBy":"117"},{"ruleId":"100","replacedBy":"118"},{"ruleId":"93","severity":1,"message":"119","line":1,"column":15,"nodeType":"95","messageId":"96","endLine":1,"endColumn":24},{"ruleId":"98","replacedBy":"120"},{"ruleId":"100","replacedBy":"121"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'createElement' is defined but never used.","'render' is defined but never used.","'active' is assigned a value but never used.","'Monaco' is defined but never used.","'url' is defined but never used.","'modifyUrl' is defined but never used.","'para' is assigned a value but never used.","'ProjectBar' is defined but never used.","'useHistory' is defined but never used.","'base_url' is assigned a value but never used.",["122"],["123"],"'Component' is defined but never used.",["122"],["123"],"no-global-assign","no-unsafe-negation"]